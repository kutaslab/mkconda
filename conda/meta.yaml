# 1. Kutaslab develpers: in the directory containing this meta.yaml file, conda
#    build this file into an installable (meta)package mkconda like
#    so, then upload it to the Anaconda kutaslab channel
#
#        conda build . -c kutaslab -c defaults -c conda-forge
#
#     Notes:
#         * at present channel order matters during the build and
#           user conda install 
#
#         * don't bother with conda metapackage ... works, but no footprints
#
# 2. Users: to conda install the package, create a bare environment
#    with some name and install mkconda (exactly) like so except replace
#    my_env_name with a reasonable name
#
#        conda create --name my_env_name
#        conda activate my_env_name
#        conda install mkconda -c kutaslab -c defaults -c conda-forge 
#

package:
  name: mkconda
  version: "0.0.4"

requirements:
  # hard pins for reproducible analyses
  run:
    - mkpy ==0.1.6
    - fitgrid ==0.4.6
    - r-base
    - zeromq !=4.2.5  # buggy version in this env
    - rpy2 <3.0  # else fitgrid fails on py2ri
    - tornado
    - jupyter
    # - rstudio  # chokes conda env resolver, TravisCI times out
    - r-tidyverse
    - r-irkernel
    - bottleneck
    - libiconv  # rpy2 needs it, not included, reasons unknown
    - numpy  # these should already be satisfied
    - scipy
    - pandas
    - matplotlib >=3.0
    - statsmodels

test:
  imports:
    - mkpy
    - fitgrid
    - numpy
    - scipy
    - statsmodels
    - matplotlib
